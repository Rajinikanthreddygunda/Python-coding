#Python tasks
"""1.Given a string, return the string made of its first two chars, so the String "Hello" yields "He". If the string is shorter than length 2, return whatever there is, so "X" yields "X", and the empty string "" yields the empty string "".

first_two('Hello') → 'He'
first_two('abcdefg') → 'ab'
first_two('ab') → 'ab'"""
a = "Hello"
print(a[0:2])
b = "Hi"
print(b[0:2])
c = ""
print(c[0:2])

"""2.Given a string, return a new string made of 3 copies of the last 2 chars of the original string. The string length will be at least 2.
extra_end('Hello') → 'lololo'
extra_end('ab') → 'ababab'
extra_end('Hi') → 'HiHiHi'"""

a = "python"
b = a[-2:]
c = b*3
d = a[-2:]*3
print(c)
print(d)

"""3. Given a string of even length, return the first half. So the string "WooHoo" yields "Woo".
first_half('WooHoo') → 'Woo'
first_half('HelloThere') → 'Hello'
first_half('abcdef') → 'abc'
"""
a = "friend"
mid_index = len(a)//2
print(a[:mid_index])
def first_half(str):
    if len(str) % 2 == 0:
        mid_index = len(str) // 2
        result = 
    else:
        return()




